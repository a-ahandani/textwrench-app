name: Build/release

on: push

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install setuptools
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools

      - name: Install dependencies
        run: npm i

      - name: Rebuild native modules
        run: npm rebuild

      - name: Build/release Electron app
        uses: paneron/action-electron-builder@v1.8.1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}


      - name: Organize build outputs by OS
        run: |
          mkdir -p dist/${{ matrix.os }}
          if [ -d "dist" ]; then
            for FILE in dist/*; do
              if [[ $FILE == *.dmg || $FILE == *.exe || $FILE == *.zip ]]; then
                mv "$FILE" "dist/${{ matrix.os }}/"
              fi
            done
          fi
        shell: bash

      - name: Upload built files
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-built-files
          path: dist/${{ matrix.os }}/*
